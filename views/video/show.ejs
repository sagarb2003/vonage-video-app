<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Video Call</title>
    <style>
      h2 {
        margin-bottom: 10px;
      }

      article {
        margin-bottom: 20px;
      }

      h3 {
        margin-bottom: 5px;
      }

      .notice {
        color: #999;
      }
      #img-preview img {
        width: 800px;
        height: 400px;
        /* display: block; */
      }
      #uploadButton {
        width: 220px;
        padding: 10px 10px;
        font-size: 16px;
        background-color: #3498db;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        display: inline-block;
        margin-bottom: 20px;
      }
    </style>
  </head>
  <body>
    <h2>Video Call</h2>
    <article>
      <div id="publisher"></div>
    </article>

    <article id="subscribers"></article>

    <article>
      <!-- Added Upload Documents Button -->
      <h2>Upload Documents for Real time verification</h2>
      <form>
        <div>
          <div id="img-preview"></div>
          <input
            type="file"
            accept="image/*"
            id="uploadButton"
            name="choose-file"
          />
          <!-- <label for="choose-file">Choose File</label> -->
        </div>
      </form>
      <h3>Meeting Link:</h3>
      <p><a href="<%= meetingLink %>"><%= meetingLink %></a></p>
      <p class="notice">
        Open this link in a separate device or browser tab for a two-way video
        call.
      </p>
    </article>

    <script type="text/javascript">
      function getImgData() {
        const files = chooseFile.files[0];
        if (files) {
          const fileReader = new FileReader();
          fileReader.readAsDataURL(files);
          fileReader.addEventListener("load", function () {
            imgPreview.style.display = "block";
            imgPreview.innerHTML = '<img src="' + this.result + '" />';
          });
        }
      }
      const chooseFile = document.getElementById("uploadButton");
      const imgPreview = document.getElementById("img-preview");
      chooseFile.addEventListener("change", function () {
        getImgData();
      });
      let apiKey = "<%= apiKey %>";
      let sessionId = "<%= sessionId %>";
      let token = "<%= token %>";

      // Initialize an OpenTok Session object
      let session = OT.initSession(apiKey, sessionId);

      // Initialize a Publisher, and place it into the element with id="publisher"
      let publisher = OT.initPublisher("publisher");

      // Attach event handlers
      session.on({
        // This function runs when session.connect() asynchronously completes
        sessionConnected: function () {
          // Publish the publisher we initialized earlier (this will trigger 'streamCreated' on other clients)
          session.publish(publisher);
        },

        // This function runs when another client publishes a stream (e.g., session.publish())
        streamCreated: function (event) {
          session.subscribe(event.stream, "subscribers", {
            insertMode: "append",
          });
        },
      });

      // Connect to the Session using the 'apiKey' of the application and a 'token' for permission
      session.connect(token);
    </script>
  </body>
</html>
